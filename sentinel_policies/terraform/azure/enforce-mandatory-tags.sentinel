# This policy uses the Sentinel tfplan/v2 import to require that
# all Azure VMs have all mandatory tags

# Import common-functions/tfplan-functions/tfplan-functions.sentinel
# with alias "plan"
import "tfplan-functions" as plan

# List of mandatory tags
mandatory_tags = ["environment"]

# Get all Azure resources using azurerm_virtual_machine
allAzureVMs = plan.find_resources("azurerm_virtual_machine")

# Filter to Azure resources with violations using azurerm_virtual_machine
# Warnings will be printed for all violations since the last parameter is true
violatingAzureVMs = plan.filter_attribute_not_contains_list(allAzureVMs,
                    "tags", mandatory_tags, true)

# Get all Azure VMs using azurerm_windows_virtual_machine
allAzureWindowsVMs = plan.find_resources("azurerm_windows_virtual_machine")

# Filter to Azure VMs with violations that use azurerm_windows_virtual_machine
# Warnings will be printed for all violations since the last parameter is true
violatingAzureWindowsVMs = plan.filter_attribute_not_contains_list(allAzureWindowsVMs,
                    "tags", mandatory_tags, true)

# Get all Azure VMs using azurerm_linux_virtual_machine
allAzureLinuxVMs = plan.find_resources("azurerm_linux_virtual_machine")

# Filter to Azure VMs with violations that use azurerm_linux_virtual_machine
# Warnings will be printed for all violations since the last parameter is true
violatingAzureLinuxVMs = plan.filter_attribute_not_contains_list(allAzureLinuxVMs,
                    "tags", mandatory_tags, true)

# Main rule
violations = length(violatingAzureVMs["messages"]) +
             length(violatingAzureWindowsVMs["messages"]) +
             length(violatingAzureLinuxVMs["messages"])

main = rule {
  violations is 0
}
